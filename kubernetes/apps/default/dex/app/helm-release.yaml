---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: dex
  namespace: default
spec:
  releaseName: dex #OpenID Connect Provider
  interval: 5m
  chart:
    spec:
      chart: dex
      version: 0.14.3
      sourceRef:
        kind: HelmRepository
        name: dex-chart
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/dexidp/dex
      tag: v2.37.0
    env:
      KUBERNETES_POD_NAMESPACE: security
    ingress:
      enabled: true
      className: nginx
      annotations:
        kubernetes.io/tls-acme: 'true'
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns/is-public: 'true'
        external-dns.alpha.kubernetes.io/target: ingress.${SECRET_PUBLIC_DOMAIN}
      hosts:
        - host: dex.${SECRET_PUBLIC_DOMAIN}
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - dex.${SECRET_PUBLIC_DOMAIN}
          secretName: tls.dex

    config:
      issuer: https://dex.${SECRET_PUBLIC_DOMAIN}

      storage:
        type: kubernetes
        config:
          inCluster: true

      web:
        http: 0.0.0.0:5556

      frontend:
        theme: tectonic
        issuer: alpheon
        issuerUrl: "https://${SECRET_PUBLIC_DOMAIN}"
        logoUrl: http://icons.iconarchive.com/icons/icons-land/metro-halloween/512/Cool-icon.png

      expiry:
        signingKeys: 6h
        idTokens: 24h

      logger:
        level: debug
        format: json

      oauth2:
        responseTypes: [code, token, id_token]
        skipApprovalScreen: true
        alwaysShowLoginScreen: false

      enablePasswordDB: false

      connectors:
      # GitHub configure 'OAuth Apps' -> 'New OAuth App', add callback URL
      # https://github.com/settings/developers
        - type: github
          id: github
          name: GitHub
          config:
            clientID: "${SECRET_DEX_GITHUB_CLIENT_ID}"
            clientSecret: "${SECRET_DEX_GITHUB_CLIENT_SECRET}"
            redirectURI: "https://dex.${SECRET_PUBLIC_DOMAIN}/callback"
          # 'orgs' can be used to map groups from Github
          # https://github.com/coreos/dex/blob/master/Documentation/connectors/github.md
            orgs:
              - name: apheon-workshop

      staticClients:
        - id: oauth2-proxy
          redirectURIs:
            - "https://oauth2.${SECRET_PUBLIC_DOMAIN}:4180/oauth2/callback"
          name: oauth2-proxy
          secret: "${AUTH0_GENERIC_CLIENT_SECRET}"

      # - id: step
      #   name: step
      #   secret: ${SECRET_DEX_STEP_CLIENT_SECRET}
      #   redirectURIs:
      #     - http://127.0.0.1:10000

      # - id: k10
      #   name: k10
      #   secret: ${SECRET_DEX_K10_CLIENT_SECRET}
      #   redirectURIs:
      #   - https://k10.${SECRET_PUBLIC_DOMAIN}/k10/auth-svc/v0/oidc/redirect

      # - id: dex-k8s-authenticator
      #   name: dex-k8s-authenticator
      #   secret: ${SECRET_DEX_K8S_AUTHENTICATOR_CLIENT_SECRET}
      #   redirectURIs:
      #     - https://login.${SECRET_PUBLIC_DOMAIN}/callback/

      # - id: nextcloud
      #   name: nextcloud
      #   secret: ${SECRET_DEX_NEXTCLOUD_CLIENT_SECRET}
      #   redirectURIs:
      #     - https://nextcloud.${SECRET_PUBLIC_DOMAIN}/apps/user_oidc/code
      #     - https://nextcloud.${SECRET_PUBLIC_DOMAIN}/apps/oidc_login/oidc

      # - id: oauth2-proxy
      #   name: oauth2-proxy
      #   secret: ${SECRET_DEX_OAUTH2_PROXY_CLIENT_SECRET}
      #   redirectURIs:
      #     - https://auth.${SECRET_PUBLIC_DOMAIN}/oauth2/callback
      #     - https://requests.${SECRET_PUBLIC_DOMAIN}/oauth2/callback

      # - id: gitea
      #   name: gitea
      #   secret: ${SECRET_DEX_GITEA_CLIENT_SECRET}
      #   redirectURIs:
      #     - https://git.${SECRET_PUBLIC_DOMAIN}/oauth2/dex/callback
      #     - https://git.${SECRET_PUBLIC_DOMAIN}/user/oauth2/dex/callback

      # - id: pomerium
      #   name: pomerium
      #   secret: ${SECRET_DEX_POMERIUM_CLIENT_SECRET}
      #   redirectURIs:
      #     - https://authenticate.${SECRET_PUBLIC_DOMAIN}/oauth2/callback


      # - id: authentik
      #   name: authentik
      #   secret: ${SECRET_DEX_AUTHENTIK_CLIENT_SECRET}
      #   redirectURIs:
      #     - https://id.${SECRET_PUBLIC_DOMAIN}/source/oauth/callback/dex/


    resources:
      requests:
        memory: 250Mi
        cpu: 25m
      limits:
        memory: 250Mi


    #  connectors are used to integrate with external identity providers, allowing users to authenticate
    #  using their credentials from those providers, while staticClients represent applications that
    #   integrate directly with Dex for authentication and token issuance. Connectors handle
    #   authentication from external sources, while staticClients represent client applications
    #   that interact with Dex itself


    # Connectors: Connectors in Dex are responsible for integrating with external identity providers
    # (IdPs) and translating their authentication mechanisms to the OpenID Connect (OIDC) or OAuth2
    # protocols. Connectors allow Dex to communicate with various identity providers such as LDAP, Google,
    # GitHub, etc. They handle the authentication flow, token exchange, and user information retrieval from
    # the external IdPs. Connectors enable users to authenticate using their existing credentials from these
    # external sources.

    # StaticClients: StaticClients, on the other hand, are Dex's way of representing client applications
    # that can authenticate and obtain tokens from Dex itself. They are typically used for applications that
    # directly integrate with Dex as the identity provider. StaticClients are configured with client
    #  credentials (client ID and client secret) and other properties like redirect URIs, scopes,
    #   and claims. When an application is registered as a StaticClient in Dex,
    #   it can perform authentication requests to Dex and obtain tokens for accessing protected resources.
