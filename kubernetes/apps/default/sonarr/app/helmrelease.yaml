---
# yaml-language-server: $schema=https://kubernetes-schemas.alpheon.uk/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: 'true'
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.548@sha256:18f1d44254def02632847627d119dc10cb94525fda359f837d4c656a980a3cf2
    env:
      TZ: Etc/UTC
      PUSHOVER_DEBUG: 'false'
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 80
      SONARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: sonarr-secret
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_PUBLIC_DOMAIN}/css/base/sonarr/nord.css"></head>';
            sub_filter_once on;
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/icon: mdi:television-classic
        hosts:
          - host: &host 'sonarr.${SECRET_PUBLIC_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: ceph-block
    persistence:
      media:
        enabled: true
        type: nfs
        server: expanse.${SECRET_DOAMIN}
        path: /eros/Media
        mountPath: /media
      scripts:
        enabled: true
        type: configMap
        name: sonarr-configmap
        subPath: pushover-notify.sh
        mountPath: /scripts/pushover-notify.sh
        defaultMode: 0775
        readOnly: true
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 1500Mi
    metrics:
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.5.3
        env:
          port: 9794
          additionalMetrics: true
          unknownQueueItems: true
